name: Flutter Build

on:
  push:
    branches:
      - master

jobs:
  # build-web:
  #   name: Build Web
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: '3.32.1'

  #     - name: Install dependencies
  #       run: flutter pub get

  #     - name: Build Web
  #       run: flutter build web --base-href /lupine/

  #     - name: Deploy to GitHub Pages
  #       uses: peaceiris/actions-gh-pages@v3
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         publish_dir: ./build/web

  # build-linux:
  #   name: Build Linux
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: '3.32.1'

  #     - name: Install system dependencies for Linux build
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y \
  #           clang cmake ninja-build pkg-config libgtk-3-dev
  #         sudo apt-get install libsecret-1-dev

  #     - name: Install Flutter dependencies
  #       run: flutter pub get

  #     - name: Build Linux
  #       run: flutter build linux

  #     - name: Create tar.gz archive with parent folder
  #       run: |
  #         mkdir -p release_archive/Lupine-linux
  #         cp -r build/linux/x64/release/bundle/* release_archive/Lupine-linux/
  #         tar -czvf Lupine-linux.tar.gz -C release_archive .

  #     - name: Get version from pubspec.yaml
  #       id: version
  #       run: |
  #         VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}' | tr -d "'" | tr -d '"')
  #         echo "Version extracted: $VERSION"
  #         echo "::set-output name=version::$VERSION"

  #     - name: Upload Linux build to GitHub Release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         tag_name: v${{ steps.version.outputs.version }}
  #         name: Linux Release v${{ steps.version.outputs.version }}
  #         files: Lupine-linux.tar.gz
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-android:
    name: Build Android
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.1'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build Android APK
        run: flutter build apk --release

      - name: Build Android App Bundle
        run: flutter build appbundle --release

      - name: Get version from pubspec.yaml
        id: version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}' | tr -d "'" | tr -d '"')
          echo "Version extracted: $VERSION"
          echo "::set-output name=version::$VERSION"

      - name: Get repository name
        id: repo-name
        run: |
          echo "::set-output name=repo::${GITHUB_REPOSITORY##*/}"

      - name: Rename APK and AAB
        run: |
          # Renommer l'APK
          cp build/app/outputs/flutter-apk/app-release.apk "${{ steps.repo-name.outputs.repo }}.apk"
          
          # Renommer l'AAB
          cp build/app/outputs/bundle/release/app-release.aab "${{ steps.repo-name.outputs.repo }}.aab"

      - name: Upload Android artifacts to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Android Release v${{ steps.version.outputs.version }}
          files: |
            ${{ steps.repo-name.outputs.repo }}.apk
            ${{ steps.repo-name.outputs.repo }}.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}